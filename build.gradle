buildscript {
    ext {
        springBootVersion = '1.4.5.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
	
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'
apply plugin: 'spring-boot'


jar {
    baseName = 'SecurityHandler'
    version =  '0.0.1'
}

repositories {
    mavenCentral()
    maven { 
        url "https://jitpack.io" 
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


publishing {
    publications {
        maven(MavenPublication) {
            groupId 'eu.h2020.symbiote'
            artifactId 'SecurityHandler'
            version '0.0.1'

            from components.java
        }
    }
}

dependencies {
    compile('org.apache.commons:commons-lang3:3.5')
 	compile 'io.jsonwebtoken:jjwt:0.7.0'
	compile group: 'org.springframework.boot', name: 'spring-boot', version: '1.4.5.RELEASE'
	compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '1.4.5.RELEASE'
	compile group: 'org.springframework.amqp', name: 'spring-amqp', version: '2.0.0.M2'
    compile group: 'com.netflix.feign',  name: 'feign-gson', version: '8.18.0'
	compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
	compile group: 'com.rabbitmq', name: 'amqp-client', version: '4.1.0'
	compile group: 'org.springframework.amqp', name: 'spring-rabbit', version: '2.0.0.M2'
    // Use JUnit4
    testCompile 'junit:junit:4.12'
}


jacoco {
    toolVersion = "0.7.7.201606060606"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

task generateJavaDocs(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = reporting.file("javadocs")
}