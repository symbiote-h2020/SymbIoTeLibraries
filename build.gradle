// initial extensions to gradle
buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.1'
        classpath 'org.owasp:dependency-check-gradle:1.4.5.1'
    }
}

// code
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

// code quality
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'

// IDEs
apply plugin: 'eclipse'
apply plugin: 'idea'

// publishing
apply plugin: 'com.cinnober.gradle.semver-git'
apply plugin: 'maven-publish'

// XXX please change with your commits according to http://semver.org/
project.version = '0.1.2'

sourceCompatibility = 1.8
targetCompatibility = 1.8

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'eu.h2020.symbiote'
            version = project.version
            from components.java
        }
    }
}

// dependencies section
repositories {
    mavenCentral()
}

// Spring related configs
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.SR6"
    }
}
// this is a library, not a runnable spring-boot jar, therefore
bootRepackage.enabled = false

dependencies {
    //from SH
    compile group: 'com.netflix.feign', name: 'feign-jackson', version: '8.18.0'
    compile('org.springframework.amqp:spring-amqp:1.7.1.RELEASE')
    compile('org.springframework.amqp:spring-rabbit:1.7.1.RELEASE')
    compile('io.jsonwebtoken:jjwt:0.7.0')

    //from symbioteLibs
    compile('com.fasterxml.jackson.core:jackson-annotations:2.8.7+')
    compile('org.springframework.data:spring-data-commons:1.13.1.RELEASE')

    // common testing
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testRuntime('org.springframework.boot:spring-boot-starter-web')
}

// code quality below
task generateJavaDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadocs")
}

// jacoco configuration section
jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

// owasp config
dependencyCheck {
    outputDirectory = "build/reports/security"
}

// including code quality extensions into the build
check.dependsOn(jacocoTestReport, 'dependencyCheck')