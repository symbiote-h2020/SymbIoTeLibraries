buildscript {
    ext {
        springBootVersion = '1.4.5.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'


jar {
    baseName = 'SecurityHandler'
    version =  '0.0.1'
}
repositories {
    mavenCentral()
    maven { 
        url "https://jitpack.io" 
    }
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootRepackage.enabled = false

dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-feign')
    compile('org.springframework.cloud:spring-cloud-starter-stream-rabbit')
    compile('com.netflix.feign:feign-gson:8.18.0')
	compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
	//compile('com.github.symbiote-h2020:SymbIoTeLibraries:master')
    testCompile('org.springframework.boot:spring-boot-starter-test')
	}



dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Camden.RELEASE"
    }
}


task generateJavaDocs(type: Javadoc) {
  source = sourceSets.main.allJava
  destinationDir = reporting.file("javadocs")
}